import * as React from 'react';
import { Link } from 'react-router-dom';
import { type RaRecord } from 'ra-core';
import { ComponentsOverrides } from '@mui/material/styles';
import { ButtonProps } from './Button';
interface Props<RecordType extends RaRecord = any> {
    icon?: React.ReactNode;
    label?: string;
    record?: RecordType;
    resource?: string;
    scrollToTop?: boolean;
}
export type ShowButtonProps<RecordType extends RaRecord = any> = Props<RecordType> & Omit<ButtonProps<typeof Link>, 'to'>;
declare const PureShowButton: React.MemoExoticComponent<(<RecordType extends RaRecord = any>(inProps: ShowButtonProps<RecordType>) => React.JSX.Element | null)>;
export default PureShowButton;
declare const PREFIX = "RaShowButton";
declare module '@mui/material/styles' {
    interface ComponentNameToClassKey {
        [PREFIX]: 'root';
    }
    interface ComponentsPropsList {
        [PREFIX]: Partial<ShowButtonProps>;
    }
    interface Components {
        [PREFIX]?: {
            defaultProps?: ComponentsPropsList[typeof PREFIX];
            styleOverrides?: ComponentsOverrides<Omit<Theme, 'components'>>[typeof PREFIX];
        };
    }
}
//# sourceMappingURL=ShowButton.d.ts.map