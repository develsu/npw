var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __rest = (this && this.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
};
import * as React from 'react';
import { createElement } from 'react';
import DefaultIcon from '@mui/icons-material/ViewList';
import { useResourceDefinitions, useGetResourceLabel, useCreatePath, useCanAccess, } from 'ra-core';
import { MenuItemLink } from './MenuItemLink';
export var ResourceMenuItem = function (_a) {
    var name = _a.name, rest = __rest(_a, ["name"]);
    var resources = useResourceDefinitions();
    var _b = useCanAccess({
        action: 'list',
        resource: name,
    }), canAccess = _b.canAccess, error = _b.error, isPending = _b.isPending;
    var getResourceLabel = useGetResourceLabel();
    var createPath = useCreatePath();
    if (!resources ||
        !resources[name] ||
        isPending ||
        canAccess === false ||
        error != null)
        return null;
    return (React.createElement(MenuItemLink, __assign({ to: createPath({
            resource: name,
            type: 'list',
        }), state: { _scrollToTop: true }, primaryText: React.createElement(React.Fragment, null, getResourceLabel(name, 2)), leftIcon: resources[name].icon ? (createElement(resources[name].icon)) : (React.createElement(DefaultIcon, null)) }, rest)));
};
//# sourceMappingURL=ResourceMenuItem.js.map