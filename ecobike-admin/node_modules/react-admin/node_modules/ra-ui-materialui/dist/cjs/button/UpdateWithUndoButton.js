"use strict";
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || (function () {
    var ownKeys = function(o) {
        ownKeys = Object.getOwnPropertyNames || function (o) {
            var ar = [];
            for (var k in o) if (Object.prototype.hasOwnProperty.call(o, k)) ar[ar.length] = k;
            return ar;
        };
        return ownKeys(o);
    };
    return function (mod) {
        if (mod && mod.__esModule) return mod;
        var result = {};
        if (mod != null) for (var k = ownKeys(mod), i = 0; i < k.length; i++) if (k[i] !== "default") __createBinding(result, mod, k[i]);
        __setModuleDefault(result, mod);
        return result;
    };
})();
var __rest = (this && this.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.UpdateWithUndoButton = void 0;
var React = __importStar(require("react"));
var styles_1 = require("@mui/material/styles");
var Update_1 = __importDefault(require("@mui/icons-material/Update"));
var ra_core_1 = require("ra-core");
var inflection_1 = require("inflection");
var Button_1 = require("./Button");
var UpdateWithUndoButton = function (inProps) {
    var props = (0, styles_1.useThemeProps)({
        props: inProps,
        name: PREFIX,
    });
    var record = (0, ra_core_1.useRecordContext)(props);
    var notify = (0, ra_core_1.useNotify)();
    var resource = (0, ra_core_1.useResourceContext)(props);
    var refresh = (0, ra_core_1.useRefresh)();
    var data = props.data, labelProp = props.label, _a = props.icon, icon = _a === void 0 ? defaultIcon : _a, onClick = props.onClick, _b = props.mutationOptions, mutationOptions = _b === void 0 ? {} : _b, rest = __rest(props, ["data", "label", "icon", "onClick", "mutationOptions"]);
    var translate = (0, ra_core_1.useTranslate)();
    var getRecordRepresentation = (0, ra_core_1.useGetRecordRepresentation)(resource);
    var recordRepresentation = getRecordRepresentation(record);
    var resourceName = translate("resources.".concat(resource, ".forcedCaseName"), {
        smart_count: 1,
        _: (0, inflection_1.humanize)(translate("resources.".concat(resource, ".name"), {
            smart_count: 1,
            _: resource ? (0, inflection_1.singularize)(resource) : undefined,
        }), true),
    });
    // We don't support React elements for this
    if (React.isValidElement(recordRepresentation)) {
        recordRepresentation = "#".concat(record === null || record === void 0 ? void 0 : record.id);
    }
    var label = (0, ra_core_1.useResourceTranslation)({
        resourceI18nKey: "resources.".concat(resource, ".action.update"),
        baseI18nKey: 'ra.action.update',
        options: {
            name: resourceName,
            recordRepresentation: recordRepresentation,
        },
        userText: labelProp,
    });
    var _c = (0, ra_core_1.useUpdate)(), updateMany = _c[0], isPending = _c[1].isPending;
    var mutationMeta = mutationOptions.meta, _d = mutationOptions.onSuccess, onSuccess = _d === void 0 ? function () {
        notify("resources.".concat(resource, ".notifications.updated"), {
            type: 'info',
            messageArgs: {
                smart_count: 1,
                _: translate('ra.notification.updated', { smart_count: 1 }),
            },
            undoable: true,
        });
    } : _d, _e = mutationOptions.onError, onError = _e === void 0 ? function (error) {
        notify(typeof error === 'string'
            ? error
            : error.message || 'ra.notification.http_error', {
            type: 'error',
            messageArgs: {
                _: typeof error === 'string'
                    ? error
                    : error && error.message
                        ? error.message
                        : undefined,
            },
        });
        refresh();
    } : _e, otherMutationOptions = __rest(mutationOptions, ["meta", "onSuccess", "onError"]);
    var handleClick = function (e) {
        if (!record) {
            throw new Error('The UpdateWithUndoButton must be used inside a RecordContext.Provider or must be passed a record prop.');
        }
        updateMany(resource, { id: record.id, data: data, meta: mutationMeta, previousData: record }, __assign({ onSuccess: onSuccess, onError: onError, mutationMode: 'undoable' }, otherMutationOptions));
        if (typeof onClick === 'function') {
            onClick(e);
        }
        e.stopPropagation();
    };
    return (React.createElement(StyledButton, __assign({ onClick: handleClick, 
        // avoid double translation
        label: React.createElement(React.Fragment, null, label), "aria-label": typeof label === 'string' ? label : undefined, disabled: isPending }, sanitizeRestProps(rest)), icon));
};
exports.UpdateWithUndoButton = UpdateWithUndoButton;
var defaultIcon = React.createElement(Update_1.default, null);
var sanitizeRestProps = function (_a) {
    var label = _a.label, rest = __rest(_a, ["label"]);
    return rest;
};
var PREFIX = 'RaUpdateWithUndoButton';
var StyledButton = (0, styles_1.styled)(Button_1.Button, {
    name: PREFIX,
    overridesResolver: function (props, styles) { return styles.root; },
})(function (_a) {
    var theme = _a.theme;
    return ({
        color: (theme.vars || theme).palette.primary.main,
        '&:hover': {
            backgroundColor: "color-mix(in srgb, ".concat((theme.vars || theme).palette.primary.main, ", transparent 12%)"),
            // Reset on mouse devices
            '@media (hover: none)': {
                backgroundColor: 'transparent',
            },
        },
    });
});
//# sourceMappingURL=UpdateWithUndoButton.js.map