"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || (function () {
    var ownKeys = function(o) {
        ownKeys = Object.getOwnPropertyNames || function (o) {
            var ar = [];
            for (var k in o) if (Object.prototype.hasOwnProperty.call(o, k)) ar[ar.length] = k;
            return ar;
        };
        return ownKeys(o);
    };
    return function (mod) {
        if (mod && mod.__esModule) return mod;
        var result = {};
        if (mod != null) for (var k = ownKeys(mod), i = 0; i < k.length; i++) if (k[i] !== "default") __createBinding(result, mod, k[i]);
        __setModuleDefault(result, mod);
        return result;
    };
})();
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.ColumnsSelector = void 0;
var React = __importStar(require("react"));
var react_1 = require("react");
var react_dom_1 = require("react-dom");
var ra_core_1 = require("ra-core");
var material_1 = require("@mui/material");
var Search_1 = __importDefault(require("@mui/icons-material/Search"));
var button_1 = require("../../button");
var ResettableTextField_1 = require("../../input/ResettableTextField");
/**
 * Render DataTable.Col elements in the ColumnsButton selector using a React Portal.
 *
 * @see ColumnsButton
 */
var ColumnsSelector = function (_a) {
    var children = _a.children;
    var translate = (0, ra_core_1.useTranslate)();
    var _b = (0, ra_core_1.useDataTableStoreContext)(), storeKey = _b.storeKey, defaultHiddenColumns = _b.defaultHiddenColumns;
    var _c = (0, ra_core_1.useStore)("".concat(storeKey, "_columnRanks")), columnRanks = _c[0], setColumnRanks = _c[1];
    var _d = (0, ra_core_1.useStore)(storeKey, defaultHiddenColumns), _hiddenColumns = _d[0], setHiddenColumns = _d[1];
    var elementId = "".concat(storeKey, "-columnsSelector");
    var _e = React.useState(function () {
        return typeof document !== 'undefined'
            ? document.getElementById(elementId)
            : null;
    }), container = _e[0], setContainer = _e[1];
    // on first mount, we don't have the container yet, so we wait for it
    React.useEffect(function () {
        if (container &&
            typeof document !== 'undefined' &&
            document.body.contains(container))
            return;
        // look for the container in the DOM every 100ms
        var interval = setInterval(function () {
            var target = document.getElementById(elementId);
            if (target)
                setContainer(target);
        }, 100);
        // stop looking after 500ms
        var timeout = setTimeout(function () { return clearInterval(interval); }, 500);
        return function () {
            clearInterval(interval);
            clearTimeout(timeout);
        };
    }, [elementId, container]);
    var _f = React.useState(''), columnFilter = _f[0], setColumnFilter = _f[1];
    if (!container)
        return null;
    var childrenArray = react_1.Children.toArray(children);
    var paddedColumnRanks = padRanks(columnRanks !== null && columnRanks !== void 0 ? columnRanks : [], childrenArray.length);
    var shouldDisplaySearchInput = childrenArray.length > 5;
    return (0, react_dom_1.createPortal)(React.createElement(material_1.MenuList, null,
        shouldDisplaySearchInput ? (React.createElement(material_1.Box, { component: "li", tabIndex: -1 },
            React.createElement(ResettableTextField_1.ResettableTextField, { hiddenLabel: true, label: "", value: columnFilter, onChange: function (e) {
                    if (typeof e === 'string') {
                        setColumnFilter(e);
                        return;
                    }
                    setColumnFilter(e.target.value);
                }, placeholder: translate('ra.action.search_columns', {
                    _: 'Search columns',
                }), InputProps: {
                    endAdornment: (React.createElement(material_1.InputAdornment, { position: "end" },
                        React.createElement(Search_1.default, { color: "disabled" }))),
                }, resettable: true, autoFocus: true, size: "small", sx: { mb: 1 } }))) : null,
        paddedColumnRanks.map(function (position, index) { return (React.createElement(ra_core_1.DataTableColumnRankContext.Provider, { value: position, key: index },
            React.createElement(ra_core_1.DataTableColumnFilterContext.Provider, { value: columnFilter, key: index }, childrenArray[position]))); }),
        React.createElement(material_1.Box, { component: "li", className: "columns-selector-actions", sx: { textAlign: 'center', mt: 1 } },
            React.createElement(button_1.Button, { onClick: function () {
                    setColumnRanks(undefined);
                    setHiddenColumns(defaultHiddenColumns);
                } }, "Reset"))), container);
};
exports.ColumnsSelector = ColumnsSelector;
var padRanks = function (ranks, length) {
    return ranks.concat(Array.from({ length: length - ranks.length }, function (_, i) { return ranks.length + i; }));
};
//# sourceMappingURL=ColumnsSelector.js.map